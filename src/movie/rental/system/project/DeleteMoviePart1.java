/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movie.rental.system.project;
import javax.swing.*;
import java.util.*;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.io.FileNotFoundException;
import javax.swing.JOptionPane;
/**
 *
 * @author Abbas Zaheer
 */
public class DeleteMoviePart1 extends javax.swing.JFrame {

    /**
     * Creates new form DeleteMoviePart1
     */
    ButtonGroup G = new ButtonGroup();
    
    public DeleteMoviePart1() {
        initComponents();
        
        G.add(jRadioButton1);
        G.add(jRadioButton2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        P_Head1 = new javax.swing.JPanel();
        heading = new javax.swing.JLabel();
        Container = new javax.swing.JPanel();
        L_Name = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        L_Year = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        Back_Button = new javax.swing.JButton();
        B_Search = new javax.swing.JButton();
        B_Clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        P_Head1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        heading.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/system/project/Search Property_32px.png"))); // NOI18N
        heading.setText("Search To Delete");

        javax.swing.GroupLayout P_Head1Layout = new javax.swing.GroupLayout(P_Head1);
        P_Head1.setLayout(P_Head1Layout);
        P_Head1Layout.setHorizontalGroup(
            P_Head1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_Head1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addGap(63, 63, 63))
        );
        P_Head1Layout.setVerticalGroup(
            P_Head1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_Head1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        Container.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        L_Name.setText("Name of Movie *");

        jRadioButton1.setText("AND");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("OR");

        L_Year.setText("Year of Release *");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ContainerLayout = new javax.swing.GroupLayout(Container);
        Container.setLayout(ContainerLayout);
        ContainerLayout.setHorizontalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ContainerLayout.createSequentialGroup()
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(ContainerLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(L_Year)
                            .addComponent(L_Name))
                        .addGap(57, 57, 57)
                        .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ContainerLayout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton2)
                        .addGap(12, 12, 12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ContainerLayout.setVerticalGroup(
            ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ContainerLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_Name)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_Year)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71))
        );

        Back_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/system/project/Go Back_24px.png"))); // NOI18N
        Back_Button.setText("Back");
        Back_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_ButtonActionPerformed(evt);
            }
        });

        B_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/system/project/Search_24px.png"))); // NOI18N
        B_Search.setText("Search");
        B_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_SearchActionPerformed(evt);
            }
        });

        B_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/movie/rental/system/project/Erase_24px.png"))); // NOI18N
        B_Clear.setText("Clear");
        B_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P_Head1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Container, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(B_Search)
                        .addGap(18, 18, 18)
                        .addComponent(B_Clear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Back_Button)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(P_Head1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back_Button)
                    .addComponent(B_Clear)
                    .addComponent(B_Search))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Back_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_ButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_Back_ButtonActionPerformed

    private void B_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_SearchActionPerformed
        
        String NAME=jTextField1.getText();
        String YEAR=jTextField2.getText();
        boolean AND=false,OR=false;
        
        
        if(jRadioButton1.isSelected())
        {
            AND=true;
            OR=false;
        }
        else
        {
            OR=true;
            AND=false;
        }
        if(NAME.isEmpty()||YEAR.isEmpty()||(AND==false && OR==false))
        {
            JOptionPane.showMessageDialog(this, "Please Fill All the fields !");
        }
        else
        {
        
                Scanner fin = null;

                try
                {
                    fin = new Scanner(new FileInputStream("Movies.txt"));
                    String Name,Year,Stars,Category;
                    int NoOfCopies;
                    boolean flag=false;

                    
                    while(fin.hasNextLine())
                    {
                        String line = fin.nextLine();
                        //System.out.println(line);

                        if(line.contains(NAME))
                        {
                            //System.out.println("Found");
                            Name=line;
                            //System.out.println(Name);

                            String line2 = fin.nextLine();
                            
                            if(AND==true)
                            {
                                
                                    if(line2.contains(YEAR))
                                    {
                                    Year=line2;
                                    //System.out.println(Year);
                                    flag=true;

                                    String start=fin.nextLine();
                                    //System.out.println(start);
                                    //Star it from here
                                    ArrayList<String> NewTempStarList = new ArrayList<String>();

                                    String TempVar=fin.nextLine();
                                    while(!TempVar.contains("*/Stars*"))
                                    {
                                        NewTempStarList.add(TempVar);
                                        TempVar=fin.nextLine();

                //read stars form file and show it.
                                    }
                                    //System.out.println("Stars");
                                    for(String i:NewTempStarList)
                                    {
                                        System.out.println(i);
                                    }
                                    String end=fin.nextLine();

                                    Category=fin.nextLine();
                                    //System.out.println(Category);
                                    NoOfCopies=Integer.parseInt(fin.nextLine());
                                    //System.out.println(NoOfCopies);

                                    JOptionPane.showMessageDialog(this, "Result Found !");

                                    DeleteMoviePart2 ResultFrame = new DeleteMoviePart2();
                                    ResultFrame.setVisible(true);
                                    ResultFrame.setjTextField1(Name);
                                    ResultFrame.setjTextField2(Year);
                                    ResultFrame.setjTextArea1_Stars(NewTempStarList);
                                    ResultFrame.setjTextField3(Category);
                                    ResultFrame.setjTextField4(NoOfCopies);
                                    
                                    
                                    //this.dispose();/////////////////////////////////
                                    
                                   
                                            PrintWriter fout=null;

                                            try
                                            {
                                                fout = new PrintWriter(new FileOutputStream("DeleteMovie.txt",false));

                                                fout.println("~Data~");
                                                fout.println(Name);
                                                fout.println(Year);
                                                    fout.println("*Stars*");
                                                for(String i: NewTempStarList)
                                                {
                                                    fout.println(i);
                                                }
                                                    fout.println("*/Stars*");

                                                fout.println("\n"+Category);
                                                fout.println(NoOfCopies);
                                                fout.println("~/Data~");
                                            }
                                            catch(FileNotFoundException e)
                                            {
                                                System.out.println("Error in Opening File");
                                            }
                                            fout.close();
                                    
                                    ///////////////////////////////////////////////////
                                    


                                     }//AND
                                    else
                                    {
                                        JOptionPane.showMessageDialog(this, "Not Found !"); 
                                    }
                                
                            }
                            
                            else
                            {
                                    if(line2.contains(YEAR))
                                    {
                                    Year=line2;
                                    //System.out.println(Year);
                                    flag=true;

                                    String start=fin.nextLine();
                                    //System.out.println(start);
                                    //Star it from here
                                    ArrayList<String> NewTempStarList = new ArrayList<String>();

                                    String TempVar=fin.nextLine();
                                    while(!TempVar.contains("*/Stars*"))
                                    {
                                        NewTempStarList.add(TempVar);
                                        TempVar=fin.nextLine();

                //read stars form file and show it.
                                    }
                                    //System.out.println("Stars");
                                    for(String i:NewTempStarList)
                                    {
                                        System.out.println(i);
                                    }
                                    String end=fin.nextLine();

                                    Category=fin.nextLine();
                                    //System.out.println(Category);
                                    NoOfCopies=Integer.parseInt(fin.nextLine());
                                    //System.out.println(NoOfCopies);

                                    JOptionPane.showMessageDialog(this, "Result Found !");

                                    DeleteMoviePart2 ResultFrame = new DeleteMoviePart2();
                                    ResultFrame.setVisible(true);
                                    ResultFrame.setjTextField1(Name);
                                    ResultFrame.setjTextField2(Year);
                                    ResultFrame.setjTextArea1_Stars(NewTempStarList);
                                    ResultFrame.setjTextField3(Category);
                                    ResultFrame.setjTextField4(NoOfCopies);

                                    //////////////////////////////////////
                                  
                                    //this.dispose();/////////////////////////////////
                                    
                                   
                                            PrintWriter fout=null;

                                            try
                                            {
                                                fout = new PrintWriter(new FileOutputStream("DeleteMovie.txt",false));

                                                fout.println("~Data~");
                                                fout.println(Name);
                                                fout.println(Year);
                                                    fout.println("*Stars*");
                                                for(String i: NewTempStarList)
                                                {
                                                    fout.println(i);
                                                }
                                                    fout.println("*/Stars*");

                                                fout.println("\n"+Category);
                                                fout.println(NoOfCopies);
                                                fout.println("~/Data~");
                                            }
                                            catch(FileNotFoundException e)
                                            {
                                                System.out.println("Error in Opening File");
                                            }
                                            fout.close();
                                    
                                    ///////////////////////////////////////////////////

                                    }//OR
                                    else
                                    {
                                       JOptionPane.showMessageDialog(this, "Name Matched But Year Not !"); 
                                    }

                            }
                            

                        }
                        

                    }
                    if(flag==false)
                        {
                            JOptionPane.showMessageDialog(this, "Result Not Found !");
                        }


                }
                catch(FileNotFoundException e)
                {
                    System.out.println("Error in Opening File");
                }
                fin.close();
   
        }
        
        

    }//GEN-LAST:event_B_SearchActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void B_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ClearActionPerformed
        jTextField1.setText("");
        jTextField2.setText("");
        
        G.clearSelection();
    }//GEN-LAST:event_B_ClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteMoviePart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteMoviePart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteMoviePart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteMoviePart1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteMoviePart1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_Clear;
    private javax.swing.JButton B_Search;
    private javax.swing.JButton Back_Button;
    private javax.swing.JPanel Container;
    private javax.swing.JLabel L_Name;
    private javax.swing.JLabel L_Year;
    private javax.swing.JPanel P_Head1;
    private javax.swing.JLabel heading;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
